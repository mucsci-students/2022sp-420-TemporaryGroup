/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'application'
    id 'jacoco'
}

application {
    mainClass.set("TemporaryGroupGradle.UMLEditor")
}

run {
    standardInput = System.in
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'
    
    implementation 'com.google.code.gson:gson:2.8.9'
    
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.0'
    
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.2.1'
    
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.0.1'
    
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    
   	
 
}

jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled false
	}
}

check.dependsOn jacocoTestReport



tasks.named('test') {
   	finalizedBy(tasks.jacocoTestReport)
}
